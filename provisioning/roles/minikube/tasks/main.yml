# roles/minikube/tasks/main.yml
---
- name: Disable SELinux
  selinux:
    state: disabled

- name: disable swap
  shell: /usr/sbin/swapoff -a

- name: disable swap permanently
  lineinfile:
    path: /etc/fstab
    regexp: '^[^#].*swap.*$'
    state: absent

- name: delete swapfile
  file:
    path: /swapfile
    state: absent

- name: download minikube rpm
  get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/minikube-{{ minikube_version }}.rpm
    dest: /var/tmp/minikube-{{ minikube_version }}.rpm
    mode: '0644'

- name: install minikube rpm
  yum:
    name: /var/tmp/minikube-{{ minikube_version }}.rpm

- name: delete minikube rpm
  file:
    path: /var/tmp/minikube-{{ minikube_version }}.rpm
    state: absent

- name: add docker repository
  yum_repository:
    name: docker-ce-stable
    description: Docker CE Stable - $basearch
    baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg

- name: install docker-ce
  yum:
    name: docker-ce-{{ docker_version }}

- name: start and enable docker service
  service:
    name: docker
    enabled: yes
    state: started

- name: Add vagrant user to docker group
  user:
    name: vagrant
    groups: docker
    append: yes

- name: set bridge-nf-call-iptables = 1
  lineinfile:
    path: /etc/sysctl.conf
    line: net.bridge.bridge-nf-call-iptables = 1

- name: apply sysctl config
  shell: sysctl -p

- name: start minikube
  shell: minikube start --vm-driver=none

- name: Add service-node-port-range parameter to minikube config file
  lineinfile:
    state: present
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    line: '    - --service-node-port-range=1024-65535'
    insertafter: '^.*service-account-key-file.*$'

- name: start and enable kubelet service
  service:
    name: kubelet
    enabled: yes
    state: started

- name: create dir /home/vagrant/bin
  file:
    path: /home/vagrant/bin
    state: directory

- name: add kubernetes repository
  yum_repository:
    name: Kubernetes
    description: Kubernetes
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgcheck: yes
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- name: install kubectl
  yum:
    name: kubectl-{{ kubectl_version }}

- name: copy kubectl conf
  copy:
    src: /root/.kube
    dest: /home/vagrant/
    remote_src: yes
    owner: vagrant
    group: vagrant

- name: fix kubectl conf
  replace:
    path: /home/vagrant/.kube/config
    regexp: '/root'
    replace: '/home/vagrant'

- name: enable kubectl autocompletion
  lineinfile:
    path: /home/vagrant/.bashrc
    line: source <(kubectl completion bash)
    insertafter: EOF

- name: copy minikube conf
  copy:
    src: /root/.minikube
    dest: /home/vagrant/
    remote_src: yes
    owner: vagrant
    group: vagrant

- name: create /vagrant directory
  file:
    path: /vagrant
    state: directory

- name: download argo-linux
  get_url:
    url: https://github.com/argoproj/argo/releases/download/v{{ argo_version }}/argo-linux-amd64
    dest: /usr/local/bin/argo
    mode: 0777

- name: install Argo Controller
  shell: kubectl create namespace argo && kubectl apply -n argo -f https://raw.githubusercontent.com/argoproj/argo/stable/manifests/install.yaml

- name: granting admin priviledges
  shell: kubectl create rolebinding default-admin --clusterrole=admin --serviceaccount=default:default
  
# temporary hack  
- name: Stop iptables service
  service:
    name: iptables
    enabled: yes
    state: stopped
